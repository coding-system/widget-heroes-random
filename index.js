export const projectName = "golast";
import {
   renderHeroes,
   saveHeroesToLocalStorage,
   loadHeroesFromLocalStorage,
   updateAllHeroes,
   updatePortraits,
} from "./scripts/portraits.js";
import { initialHeroes } from "./scripts/heroes.js";
import { lastHeroes } from "./scripts/lastheroes.js";
import {
   currentRandomHero,
   chooseRandomHero,
   getRandomHero,
} from "./scripts/random.js";
import {
   globalOverlay,
   runAnimation,
   reroll,
   acceptChosenHero,
   resetRollStyles,
   handleKeyPressRoll,
   resetHidePageTimer,
} from "./scripts/rolling.js";

import {
   // TOTAL_ANIMATION_DURATION,
   // TOTAL_HIDINGS_COUNT,
   loadDurationFromStorage,
   loadHidingsCountFromStorage,
} from "./scripts/localstorage.js";
// import { hints, createHint, initHints, showHint } from "./scripts/hints.js";
import { createChellangeHeroes } from "./scripts/bannedHistory.js";

export let currentHeroesList = [];
export let playedHeroesList = [];
export const startHeroes = JSON.parse(JSON.stringify(initialHeroes));

// –ó–∞–≥—Ä—É–∂–∞–µ–º –≥–µ—Ä–æ–µ–≤ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
window.addEventListener("DOMContentLoaded", async () => {
   const loadedHeroes = loadHeroesFromLocalStorage();
   if (loadedHeroes) {
      currentHeroesList = loadedHeroes;
   } else {
      currentHeroesList = startHeroes;
      saveHeroesToLocalStorage(currentHeroesList);
   }
   renderHeroes(currentHeroesList);
   showPageBody(200);

   // –ñ–¥–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ autoHeroTracker –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–±–∞–Ω–µ–Ω–Ω—ã—Ö –≥–µ—Ä–æ–µ–≤
   // playedHeroesList —Ç–µ–ø–µ—Ä—å –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–±–∞–Ω–µ–Ω–Ω—ã—Ö –≥–µ—Ä–æ–µ–≤
   setTimeout(async () => {
      if (window.autoHeroTracker) {
         playedHeroesList = window.autoHeroTracker.getAutoBannedHeroes();
         console.log(
            "–ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–±–∞–Ω–µ–Ω–Ω—ã—Ö –≥–µ—Ä–æ–µ–≤:",
            playedHeroesList
         );
      } else {
         console.log(
            "AutoHeroTracker –µ—â–µ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫"
         );
         playedHeroesList = [];
      }
   }, 1000); // –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é autoHeroTracker
});

console.log(startHeroes);

// –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
let lastChosenItem = null;
// export let currentRandomHero;
const pageBody = document.querySelector(".body");
export const navPanel = document.querySelector(".nav-panel");
const goBtn = document.querySelector(".go-button");
const banAllButton = document.querySelector(".ban-all-button");
const unbanAllButton = document.querySelector(".unban-all-button");
const resetButton = document.querySelector(".reset-button");
const historyButton = document.querySelector(".history-button");

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ "Roll"
goBtn.addEventListener("click", () => {
   chooseRandomHero(currentHeroesList);
   runAnimation(currentHeroesList);
   resetHidePageTimer();
});

banAllButton.addEventListener("click", () => {
   updateAllHeroes(currentHeroesList, false);
   resetHidePageTimer();
   console.log("–í—Å–µ –≥–µ—Ä–æ–∏ –∑–∞–±–∞–Ω–µ–Ω—ã");
});

unbanAllButton.addEventListener("click", () => {
   updateAllHeroes(currentHeroesList, true);
   resetHidePageTimer();
   console.log("–í—Å–µ –≥–µ—Ä–æ–∏ —Ä–∞–∑–±–∞–Ω–µ–Ω—ã");
});
resetButton.addEventListener("click", () => {
   resetLocalStorage();
   updateAllHeroes(currentHeroesList, true);
   resetHidePageTimer();
   console.log("–í—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–±—Ä–æ—à–µ–Ω—ã");
});

historyButton.addEventListener("click", () => {
   // –ü—Ä–∏–º–µ–Ω—è–µ–º –±–∞–Ω—ã –∏–∑ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–±–∞–Ω–µ–Ω–Ω—ã—Ö –≥–µ—Ä–æ–µ–≤
   applyAutoBannedHeroes();
});

document.addEventListener("keyup", handleKeyPressRoll);

document.addEventListener("keyup", function (event) {
   const key = event.key.toLowerCase();
   if (key === "w" || key === "—Ü") {
      navPanel.classList.toggle("nav-panel-visible");
      if (!pageBody.classList.contains("body-visible")) {
         pageBody.classList.add("body-visible");
      }
      resetHidePageTimer();
   }
});

document.addEventListener("keyup", function (event) {
   const key = event.key.toLowerCase();
   if (key === "f" || key === "–∞") {
      pageBody.classList.toggle("body-visible");
      resetHidePageTimer();
   }
});

function resetLocalStorage() {
   localStorage.clear();
   currentHeroesList = JSON.parse(JSON.stringify(startHeroes));
   saveHeroesToLocalStorage(currentHeroesList);

   // –û–±–Ω–æ–≤–ª—è–µ–º START_MATCH_ID –Ω–∞ ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –º–∞—Ç—á–∞
   if (window.autoHeroTracker) {
      window.autoHeroTracker
         .updateStartMatchIdToLatest()
         .then(async (success) => {
            if (success) {
               const newStartMatchId = window.autoHeroTracker.getStartMatchId();
               if (window.autoHeroTracker.updateInputField) {
                  window.autoHeroTracker.updateInputField(newStartMatchId);
               }
               // –û—á–∏—â–∞–µ–º autoBannedHeroes –∏ —Å—Ä–∞–∑—É –ø—Ä–∏–º–µ–Ω—è–µ–º —Å—ã–≥—Ä–∞–Ω–Ω—ã—Ö –≥–µ—Ä–æ–µ–≤
               window.autoHeroTracker.autoBannedHeroes = [];
               await window.autoHeroTracker.saveAutoBannedHeroes();
               await window.autoHeroTracker.checkForNewMatches();
               console.log(
                  "‚úÖ START_MATCH_ID –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–∞—Ç—á –∏ —Å—ã–≥—Ä–∞–Ω–Ω—ã–µ –≥–µ—Ä–æ–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã"
               );
            } else {
               if (window.autoHeroTracker.updateInputField) {
                  window.autoHeroTracker.updateInputField("");
               }
               console.log("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å START_MATCH_ID");
            }
         });
   }

   console.log(
      "–í–µ—Å—å localStorage –æ—á–∏—â–µ–Ω –∏ –≥–µ—Ä–æ–∏ —Å–±—Ä–æ—à–µ–Ω—ã –∫ –Ω–∞—á–∞–ª—å–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é!"
   );
}

let timeoutId = null; // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID —Ç–∞–π–º–∞—É—Ç–∞

export function showPageBody(delay = 0) {
   if (timeoutId) {
      clearTimeout(timeoutId); // –û—Ç–º–µ–Ω—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–∞–π–º–∞—É—Ç, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
   }
   if (delay > 0) {
      timeoutId = setTimeout(() => {
         pageBody.classList.add("body-visible");
         timeoutId = null; // –û—á–∏—â–∞–µ–º ID –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
      }, delay);
   } else {
      pageBody.classList.add("body-visible");
   }
}

export function hidePageBody(delay = 0) {
   if (timeoutId) {
      clearTimeout(timeoutId); // –û—Ç–º–µ–Ω—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–∞–π–º–∞—É—Ç, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
   }
   if (delay > 0) {
      timeoutId = setTimeout(() => {
         pageBody.classList.remove("body-visible");
         timeoutId = null; // –û—á–∏—â–∞–µ–º ID –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
      }, delay);
   } else {
      pageBody.classList.remove("body-visible");
      navPanel.classList.remove("nav-panel-visible");
   }
}

loadHidingsCountFromStorage();
loadDurationFromStorage();

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–±–∞–Ω–µ–Ω–Ω—ã—Ö –≥–µ—Ä–æ–µ–≤
export function updateAutoBannedHeroesList() {
   if (window.autoHeroTracker) {
      playedHeroesList = window.autoHeroTracker.getAutoBannedHeroes();
      console.log(
         "üìã –°–ø–∏—Å–æ–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–±–∞–Ω–µ–Ω–Ω—ã—Ö –≥–µ—Ä–æ–µ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω:",
         playedHeroesList
      );
      return playedHeroesList;
   } else {
      console.log("‚ùå AutoHeroTracker –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω");
      return [];
   }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –±–∞–Ω–æ–≤ –∏–∑ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–±–∞–Ω–µ–Ω–Ω—ã—Ö –≥–µ—Ä–æ–µ–≤
export function applyAutoBannedHeroes() {
   // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–±–∞–Ω–µ–Ω–Ω—ã—Ö –≥–µ—Ä–æ–µ–≤
   const currentAutoBannedHeroes = updateAutoBannedHeroesList();

   // –ü—Ä–∏–º–µ–Ω—è–µ–º –±–∞–Ω—ã
   const chellangeHeroes = createChellangeHeroes(
      startHeroes,
      currentAutoBannedHeroes
   );
   currentHeroesList = chellangeHeroes;
   saveHeroesToLocalStorage(currentHeroesList);
   updatePortraits(currentHeroesList);
   resetHidePageTimer();

   console.log("‚úÖ –ü—Ä–∏–º–µ–Ω–µ–Ω—ã –±–∞–Ω—ã –∏–∑ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–±–∞–Ω–µ–Ω–Ω—ã—Ö –≥–µ—Ä–æ–µ–≤");
   console.log(`üìä –ó–∞–±–∞–Ω–Ω–µ–Ω–æ –≥–µ—Ä–æ–µ–≤: ${currentAutoBannedHeroes.length}`);

   return currentAutoBannedHeroes;
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏
export function getSystemInfo() {
   const info = {
      startMatchId: window.autoHeroTracker
         ? window.autoHeroTracker.getStartMatchId()
         : "–ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω",
      autoBannedHeroesCount: window.autoHeroTracker
         ? window.autoHeroTracker.getAutoBannedHeroes().length
         : 0,
      currentHeroesCount: currentHeroesList.length,
      playerId: 1892794016,
   };

   console.log("üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ:", info);
   return info;
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≤ window –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª–∏
window.getSystemInfo = getSystemInfo;

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≤ window –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª–∏
window.applyAutoBannedHeroes = applyAutoBannedHeroes;

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≤ window –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª–∏
window.updateAutoBannedHeroesList = updateAutoBannedHeroesList;

console.log(startHeroes);
